# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cache {
  """Expiretime"""
  expiretime: String!

  """CacheKey"""
  key: String!

  """Value"""
  value: String!
}

type Catalogue {
  """Children"""
  children: [Catalogue!]

  """Content"""
  content: String

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """CatalogueId"""
  id: ID!

  """Name"""
  name: String!

  """Parent"""
  parent: Catalogue

  """Pid"""
  pid: ID

  """Resource"""
  resource: Resource!

  """ResourceId"""
  resourceId: String!

  """Sort"""
  sort: Float!

  """Type"""
  type: String!

  """UpdatedAt"""
  updatedAt: DateTime

  """Url"""
  url: String
}

input CatalogueOrderInput {
  """CreatedAt"""
  createdAt: SortOrder

  """Name"""
  name: SortOrder

  """Resource"""
  resource: SortOrder

  """ResourceId"""
  resourceId: SortOrder

  """Sort"""
  sort: SortOrder

  """Type"""
  type: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type CataloguePaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Catalogue!]!
}

type CatalogueSelectOutput {
  """Children"""
  children: [Catalogue!]

  """Content"""
  content: String

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """CatalogueId"""
  id: ID!

  """Name"""
  name: String!

  """Parent"""
  parent: Catalogue

  """Pid"""
  pid: ID

  """Sort"""
  sort: Float!

  """Type"""
  type: String!

  """UpdatedAt"""
  updatedAt: DateTime

  """Url"""
  url: String
}

input CatalogueWhere {
  """Content"""
  content: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """Pid"""
  pid: StringFilter

  """Resource"""
  resource: ResourceWhereInput

  """ResourceId"""
  resourceId: StringFilter

  """Sort"""
  sort: NumberFilter

  """Type"""
  type: StringFilter

  """Url"""
  url: StringFilter
}

input CatalogueWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [CatalogueWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [CatalogueWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [CatalogueWhere!]

  """Content"""
  content: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """Pid"""
  pid: StringFilter

  """Resource"""
  resource: ResourceWhereInput

  """ResourceId"""
  resourceId: StringFilter

  """Sort"""
  sort: NumberFilter

  """Type"""
  type: StringFilter

  """Url"""
  url: StringFilter
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFilter {
  """Equals the given value"""
  equals: DateTime

  """Greater than the given value"""
  gt: DateTime

  """Greater than or equal to the given value"""
  gte: DateTime

  """Is in the given set of values"""
  in: [DateTime!]

  """Less than the given value"""
  lt: DateTime

  """Less than or equal to the given value"""
  lte: DateTime

  """Does not equal the given value"""
  not: DateTime

  """Is not in the given set of values"""
  notIn: [DateTime!]
}

type Dictionary {
  """Children"""
  children: [Dictionary!]

  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """DictionaryId"""
  id: ID!

  """Name"""
  name: String!

  """Parent"""
  parent: Dictionary

  """Pid"""
  pid: ID

  """Sort"""
  sort: Float!

  """UpdatedAt"""
  updatedAt: DateTime
}

input DictionaryOrderInput {
  """Code"""
  code: SortOrder

  """CreatedAt"""
  createdAt: SortOrder

  """Name"""
  name: SortOrder

  """Sort"""
  sort: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type DictionaryPaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Dictionary!]!
}

type DictionarySelectOutput {
  """Children"""
  children: [Dictionary!]

  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """DictionaryId"""
  id: ID!

  """Name"""
  name: String!

  """Parent"""
  parent: Dictionary

  """Pid"""
  pid: ID

  """Sort"""
  sort: Float!

  """UpdatedAt"""
  updatedAt: DateTime
}

input DictionaryWhere {
  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """Pid"""
  pid: StringFilter

  """Sort"""
  sort: StringFilter
}

input DictionaryWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [DictionaryWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [DictionaryWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [DictionaryWhere!]

  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """Pid"""
  pid: StringFilter

  """Sort"""
  sort: StringFilter
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Language {
  """CreatedAt"""
  createdAt: DateTime

  """LanguageId"""
  id: ID!

  """Key"""
  key: String!

  """LanguageCode"""
  languageCode: String!

  """UpdatedAt"""
  updatedAt: DateTime

  """Value"""
  value: String
}

input LanguageOrderInput {
  """CreatedAt"""
  createdAt: SortOrder

  """Key"""
  key: SortOrder

  """LanguageCode"""
  languageCode: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder

  """Value"""
  value: SortOrder
}

type LanguagePaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Language!]!
}

type LanguageSelectOutput {
  """CreatedAt"""
  createdAt: DateTime

  """LanguageId"""
  id: ID!

  """Key"""
  key: String!

  """LanguageCode"""
  languageCode: String!

  """UpdatedAt"""
  updatedAt: DateTime

  """Value"""
  value: String
}

input LanguageWhere {
  """Key"""
  key: StringFilter

  """LanguageCode"""
  languageCode: StringFilter

  """Value"""
  value: StringFilter
}

input LanguageWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [LanguageWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [LanguageWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [LanguageWhere!]

  """Key"""
  key: StringFilter

  """LanguageCode"""
  languageCode: StringFilter

  """Value"""
  value: StringFilter
}

type LogsFile {
  """Extension"""
  extension: String

  """Name"""
  name: String

  """Type"""
  type: String
}

type LogsOutput {
  """Cache"""
  cache: [LogsFile!]

  """Error"""
  error: [LogsFile!]

  """Http"""
  http: [LogsFile!]

  """Info"""
  info: [LogsFile!]

  """Prisma"""
  prisma: [LogsFile!]

  """Warn"""
  warn: [LogsFile!]
}

input NumberFilter {
  """Equals the given value"""
  equals: Float

  """Greater than the given value"""
  gt: Float

  """Greater than or equal to the given value"""
  gte: Float

  """Is in the given set of values"""
  in: [Float!]

  """Less than the given value"""
  lt: Float

  """Less than or equal to the given value"""
  lte: Float

  """Does not equal the given value"""
  not: Float

  """Is not in the given set of values"""
  notIn: [Float!]
}

type Permission {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """PermissionId"""
  id: ID!

  """Name"""
  name: String!

  """ResourceId"""
  resourceId: String!

  """Sort"""
  sort: Float!

  """UpdatedAt"""
  updatedAt: DateTime
}

input PermissionOrderInput {
  """Code"""
  code: SortOrder

  """CreatedAt"""
  createdAt: SortOrder

  """Description"""
  description: SortOrder

  """Name"""
  name: SortOrder

  """Sort"""
  sort: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type PermissionPaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Permission!]!
}

type PermissionSelectOutput {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """PermissionId"""
  id: ID!

  """Name"""
  name: String!

  """ResourceId"""
  resourceId: String!

  """Sort"""
  sort: Float!

  """UpdatedAt"""
  updatedAt: DateTime
}

input PermissionWhere {
  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """ResourceId"""
  resourceId: StringFilter

  """Sort"""
  sort: NumberFilter
}

input PermissionWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [PermissionWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [PermissionWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [PermissionWhere!]

  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """ResourceId"""
  resourceId: StringFilter

  """Sort"""
  sort: NumberFilter
}

input PermissionsInclude {
  """Sorting rule"""
  orderBy: PermissionOrderInput

  """Query condition"""
  where: PermissionWhereInput
}

type Query {
  """CacheGet"""
  cache(key: String!): Cache!

  """CacheKeys"""
  cacheKeys(
    """CacheKey"""
    key: String = "*"
  ): [String!]!

  """Catalogue"""
  catalogue(
    """CatalogueId"""
    id: ID!
  ): Catalogue!

  """CatalogueSelect. No Pagination"""
  catalogueSelect(
    """Sorting rule"""
    orderBy: [CatalogueOrderInput!]

    """Query condition"""
    where: CatalogueWhereInput
  ): [CatalogueSelectOutput!]!

  """Catalogues"""
  catalogues(
    """Sorting rule"""
    orderBy: [CatalogueOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: CatalogueWhereInput
  ): CataloguePaginationOutput!

  """Dictionaries"""
  dictionaries(
    """Sorting rule"""
    orderBy: [DictionaryOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: DictionaryWhereInput
  ): DictionaryPaginationOutput!

  """Dictionary"""
  dictionary(
    """DictionaryId"""
    id: ID!
  ): Dictionary!

  """DictionarySelect. No Pagination"""
  dictionarySelect(
    """Sorting rule"""
    orderBy: [DictionaryOrderInput!]

    """Query condition"""
    where: DictionaryWhereInput
  ): [DictionarySelectOutput!]!

  """Language"""
  language(
    """LanguageId"""
    id: ID!
  ): Language!

  """LanguageSelect. No Pagination"""
  languageSelect(
    """Sorting rule"""
    orderBy: [LanguageOrderInput!]

    """Query condition"""
    where: LanguageWhereInput
  ): [LanguageSelectOutput!]!

  """Languages"""
  languages(
    """Sorting rule"""
    orderBy: [LanguageOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: LanguageWhereInput
  ): LanguagePaginationOutput!

  """A list of log categories"""
  logs: LogsOutput!

  """Permission"""
  permission(
    """PermissionId"""
    id: ID!
  ): Permission!

  """PermissionSelect. No Pagination"""
  permissionSelect(
    """Sorting rule"""
    orderBy: [PermissionOrderInput!]

    """Query condition"""
    where: PermissionWhereInput
  ): [PermissionSelectOutput!]!

  """Permissions"""
  permissions(
    """Sorting rule"""
    orderBy: [PermissionOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: PermissionWhereInput
  ): PermissionPaginationOutput!

  """Resource"""
  resource(
    """ResourceId"""
    id: ID!
  ): Resource!

  """ResourceSelect. No Pagination"""
  resourceSelect(
    """Includes associated objects"""
    include: ResourceIncludeInput

    """Sorting rule"""
    orderBy: [ResourceOrderInput!]

    """Query condition"""
    where: ResourceWhereInput
  ): [ResourceSelectOutput!]!

  """Resources"""
  resources(
    """Sorting rule"""
    orderBy: [ResourceOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: ResourceWhereInput
  ): ResourcePaginationOutput!

  """Role"""
  role(
    """RoleId"""
    id: ID!
  ): Role!

  """RolePermissions. No Pagination"""
  rolePermissions(
    """RoleId"""
    id: ID!

    """SubjectId"""
    subjectId: ID!
  ): [RolePermissionOutput!]!

  """RoleSelect. No Pagination"""
  roleSelect(
    """Sorting rule"""
    orderBy: [RoleOrderInput!]

    """Query condition"""
    where: RoleWhereInput
  ): [RoleSelectOutput!]!

  """Roles"""
  roles(
    """Sorting rule"""
    orderBy: [RoleOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: RoleWhereInput
  ): RolePaginationOutput!

  """Schema"""
  schema(
    """SchemaId"""
    id: ID!
  ): Schema!

  """SchemaSelect. No Pagination"""
  schemaSelect(
    """Sorting rule"""
    orderBy: [SchemaOrderInput!]

    """Query condition"""
    where: SchemaWhereInput
  ): [SchemaSelectOutput!]!

  """Schemas"""
  schemas(
    """Sorting rule"""
    orderBy: [SchemaOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: SchemaWhereInput
  ): SchemaPaginationOutput!

  """Subject"""
  subject(
    """SubjectId"""
    id: ID!
  ): Subject!

  """SubjectSelect. No Pagination"""
  subjectSelect(
    """Sorting rule"""
    orderBy: [SubjectOrderInput!]

    """Query condition"""
    where: SubjectWhereInput
  ): [SubjectSelectOutput!]!

  """Subjects"""
  subjects(
    """Sorting rule"""
    orderBy: [SubjectOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: SubjectWhereInput
  ): SubjectPaginationOutput!

  """User"""
  user(
    """UserId"""
    id: ID!
  ): User!

  """User"""
  userInfo: User!

  """UserSelect. No Pagination"""
  userSelect(
    """Sorting rule"""
    orderBy: [UserOrderInput!]

    """Query condition"""
    where: UserWhereInput
  ): [UserSelectOutput!]!

  """Users"""
  users(
    """Sorting rule"""
    orderBy: [UserOrderInput!]

    """Index starting position, default is 0"""
    skip: Int = 0

    """Number of data items to retrieve, default is 10"""
    take: Int = 10

    """Query condition"""
    where: UserWhereInput
  ): UserPaginationOutput!
}

type Resource {
  """Children"""
  children: [Resource!]

  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """ResourceId"""
  id: ID!

  """Name"""
  name: String!

  """Parent"""
  parent: Resource

  """Pid"""
  pid: ID

  """Sort"""
  sort: Float!

  """Subject"""
  subject: Subject!

  """SubjectId"""
  subjectId: String!

  """UpdatedAt"""
  updatedAt: DateTime
}

input ResourceIncludeInput {
  """Permission"""
  permissions: PermissionsInclude
}

input ResourceOrderInput {
  """Code"""
  code: SortOrder

  """CreatedAt"""
  createdAt: SortOrder

  """Name"""
  name: SortOrder

  """Sort"""
  sort: SortOrder

  """Subject"""
  subject: SortOrder

  """SubjectId"""
  subjectId: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type ResourcePaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Resource!]!
}

type ResourceSelectOutput {
  """Children"""
  children: [Resource!]

  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """ResourceId"""
  id: ID!

  """Name"""
  name: String!

  """Parent"""
  parent: Resource

  """Permission"""
  permissions: [Permission!]

  """Pid"""
  pid: ID

  """Sort"""
  sort: Float!

  """UpdatedAt"""
  updatedAt: DateTime
}

input ResourceWhere {
  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """Pid"""
  pid: StringFilter

  """Sort"""
  sort: NumberFilter

  """Subject"""
  subject: SubjectWhereInput

  """SubjectId"""
  subjectId: StringFilter
}

input ResourceWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [ResourceWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [ResourceWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [ResourceWhere!]

  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter

  """Pid"""
  pid: StringFilter

  """Sort"""
  sort: NumberFilter

  """Subject"""
  subject: SubjectWhereInput

  """SubjectId"""
  subjectId: StringFilter
}

type Role {
  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """RoleId"""
  id: ID!

  """Name"""
  name: String!

  """Permission"""
  permissions: [RolePermission!]

  """UpdatedAt"""
  updatedAt: DateTime
}

input RoleOrderInput {
  """CreatedAt"""
  createdAt: SortOrder

  """Description"""
  description: SortOrder

  """Name"""
  name: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type RolePaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Role!]!
}

type RolePermission {
  """Permission"""
  permission: Permission
  permissionId: ID
}

type RolePermissionOutput {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """PermissionId"""
  id: ID!

  """Name"""
  name: String!

  """ResourceId"""
  resourceId: String!

  """Sort"""
  sort: Float!

  """UpdatedAt"""
  updatedAt: DateTime
}

type RoleSelectOutput {
  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """RoleId"""
  id: ID!

  """Name"""
  name: String!

  """Permission"""
  permissions: [RolePermission!]

  """UpdatedAt"""
  updatedAt: DateTime
}

input RoleWhere {
  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter
}

input RoleWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [RoleWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [RoleWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [RoleWhere!]

  """Description"""
  description: StringFilter

  """Name"""
  name: StringFilter
}

type Schema {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """SchemaId"""
  id: ID!

  """Json"""
  json: JSON!

  """Name"""
  name: String!

  """UpdatedAt"""
  updatedAt: DateTime
}

input SchemaOrderInput {
  """Code"""
  code: SortOrder

  """CreatedAt"""
  createdAt: SortOrder

  """Name"""
  name: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type SchemaPaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Schema!]!
}

type SchemaSelectOutput {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """SchemaId"""
  id: ID!

  """Json"""
  json: JSON!

  """Name"""
  name: String!

  """UpdatedAt"""
  updatedAt: DateTime
}

input SchemaWhere {
  """Code"""
  code: StringFilter

  """Name"""
  name: StringFilter
}

input SchemaWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [SchemaWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [SchemaWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [SchemaWhere!]

  """Code"""
  code: StringFilter

  """Name"""
  name: StringFilter
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  """Contains the given value"""
  contains: String

  """Ends with the given value"""
  endsWith: String

  """Equals the given value"""
  equals: String

  """Greater than the given value"""
  gt: String

  """Greater than or equal to the given value"""
  gte: String

  """Is in the given set of values"""
  in: [String!]

  """Less than the given value"""
  lt: String

  """Less than or equal to the given value"""
  lte: String

  """Does not equal the given value"""
  not: String

  """Is not in the given set of values"""
  notIn: [String!]

  """Starts with the given value"""
  startsWith: String
}

type Subject {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """SubjectId"""
  id: ID!

  """Name"""
  name: String!

  """UpdatedAt"""
  updatedAt: DateTime
}

input SubjectOrderInput {
  """Code"""
  code: SortOrder

  """CreatedAt"""
  createdAt: SortOrder

  """Description"""
  description: SortOrder

  """Name"""
  name: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type SubjectPaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [Subject!]!
}

type SubjectSelectOutput {
  """Code"""
  code: String!

  """CreatedAt"""
  createdAt: DateTime

  """Description"""
  description: String

  """SubjectId"""
  id: ID!

  """Name"""
  name: String!

  """UpdatedAt"""
  updatedAt: DateTime
}

input SubjectWhere {
  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """SubjectId"""
  id: StringFilter

  """Name"""
  name: StringFilter
}

input SubjectWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [SubjectWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [SubjectWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [SubjectWhere!]

  """Code"""
  code: StringFilter

  """Description"""
  description: StringFilter

  """SubjectId"""
  id: StringFilter

  """Name"""
  name: StringFilter
}

type User {
  """Account"""
  account: String!

  """CreatedAt"""
  createdAt: DateTime

  """Email"""
  email: String!

  """UserId"""
  id: ID!

  """Name"""
  name: String!

  """Phone"""
  phone: String

  """UserRole"""
  roles: [UserRole!]

  """UpdatedAt"""
  updatedAt: DateTime
}

input UserOrderInput {
  """Account"""
  account: SortOrder

  """CreatedAt"""
  createdAt: SortOrder

  """Email"""
  email: SortOrder

  """Name"""
  name: SortOrder

  """Phone"""
  phone: SortOrder

  """UpdatedAt"""
  updatedAt: SortOrder
}

type UserPaginationOutput {
  """Total count"""
  count: Int

  """Data collection"""
  data: [User!]!
}

type UserRole {
  """UserRole"""
  role: Role
  roleId: ID
}

type UserSelectOutput {
  """Account"""
  account: String!

  """CreatedAt"""
  createdAt: DateTime

  """Email"""
  email: String!

  """UserId"""
  id: ID!

  """Name"""
  name: String!

  """Phone"""
  phone: String

  """UserRole"""
  roles: [UserRole!]

  """UpdatedAt"""
  updatedAt: DateTime
}

input UserWhere {
  """Account"""
  account: StringFilter

  """CreatedAt"""
  createdAt: DateTimeFilter

  """Email"""
  email: StringFilter

  """Name"""
  name: StringFilter

  """Phone"""
  phone: StringFilter

  """UpdatedAt"""
  updatedAt: DateTimeFilter
}

input UserWhereInput {
  """Logical AND, returns true if all conditions are true"""
  AND: [UserWhere!]

  """Logical NOT, returns false if all conditions are true"""
  NOT: [UserWhere!]

  """Logical OR, returns true if one or more conditions are met"""
  OR: [UserWhere!]

  """Account"""
  account: StringFilter

  """CreatedAt"""
  createdAt: DateTimeFilter

  """Email"""
  email: StringFilter

  """Name"""
  name: StringFilter

  """Phone"""
  phone: StringFilter

  """UpdatedAt"""
  updatedAt: DateTimeFilter
}